!function(e){var t={};function a(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=t,a.d=function(e,t,i){a.o(e,t)||Object.defineProperty(e,t,{configurable:!1,enumerable:!0,get:i})},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="/",a(a.s=66)}({66:function(e,t,a){e.exports=a(67)},67:function(e,t){var a,i,n;$(".Select-Colors").chosen({placeholder_text_multiple:"Seleccione los colores",search_contains:!0,no_results_text:"No se ha encontrado el color"}),$(".Select-Tags").chosen({placeholder_text_multiple:"Seleccione las etiquetas",search_contains:!0,no_results_text:"No se ha encontrado la etiqueta"}),$(".Select-Brand").chosen({placeholder_text_single:"Seleccione la marca",search_contains:!0,no_results_text:"No se ha encontrado la marca"}),$(".Select-Atribute").chosen({placeholder_text_multiple:"Seleccionar",search_contains:!0,no_results_text:"No se ha encontrado"}),$(".Select-Category").chosen({placeholder_text_single:"Seleccione una categoría"}),$(".Select-Chosen").chosen({placeholder_text_single:"Seleccione una categoría"}),$(".SlugInput").keyup(function(){var e=$(this).val();e=(e=(e=(e=(e=(e=(e=(e=(e=e.toLowerCase()).replace(/[&\/\\#,¡!´#+()$~%.'":*?<>{}]/g,"")).replace(/\s+/g,"-")).replace("ñ","n")).replace("á","a")).replace("é","e")).replace("í","i")).replace("ó","o")).replace("ú","u"),$(".SlugInput").val(e)}),$("#TitleInput").keyup(function(e){$(this).val();var t=$(this).val();t=(t=(t=(t=(t=(t=(t=(t=(t=t.toLowerCase()).replace(/[&\/\\#,¡!´#+()$~%.'":*?<>{}]/g,"")).replace(/\s+/g,"-")).replace("ñ","n")).replace("á","a")).replace("é","e")).replace("í","i")).replace("ó","o")).replace("ú","u"),$(".SlugInput").val(t)}),$(".ShowNotesTextArea").click(function(){var e=$(".NotesTextArea");e.hasClass("Hidden")?e.removeClass("Hidden"):e.addClass("Hidden")}),$(".AddAnotherAddressBtn").click(function(){$(".AnotherAddress").append("<input class='form-control' placeholder='Ingrese otro teléfono' name='deliveryaddress[]' type='text' style='margin-top:5px'>"),$(".AnotherLoc").append("<input class='form-control' placeholder='Ingrese otro teléfono' name='deliveryaddress[]' type='text' style='margin-top:5px'>")}),window.checkVariants=function(){var e=[];return $(".Combination").each(function(){e.push($(this).data("combination"))}),e},window.makeVariants=function(){var e=$("#ArticleVariants"),t=$(".VariantSize"),a=$(".VariantColor"),i=[],n=[];$.each(t,function(){$(this).is(":checked")&&(size={},size.id=$(this).val(),size.name=$(this).data("name"),n.push(size))}),$.each(a,function(){$(this).is(":checked")&&(color={},color.id=$(this).val(),color.name=$(this).data("name"),i.push(color))});var o=[];$.each(i,function(e,t){$.each(n,function(e,a){var i={};i.combination=t.name+"/"+a.name,i.color=t.name,i.color_id=t.id,i.size=a.name,i.size_id=a.id,o.push(i)})}),console.log(o);var l=checkVariants();$.each(o,function(t,a){if(!l.includes(a.combination)){var i="<tr><td class='Combination' data-combination="+a.color+"/"+a.size+">"+a.color+"/"+a.size+"</td><input name='variants["+a.combination+"][color]' value="+a.color_id+" type='hidden' class='form-control'><input name='variants["+a.combination+"][size]' value="+a.size_id+" type='hidden' class='form-control'><td><input name='variants["+a.combination+"][stock]' value='10' type='number' min='0' class='form-control'></td><td><a class='RemoveDynRow delete-icon'><i class='delete-icon fa fa-trash'></i></a></td></tr>";e.append(i)}}),$("#HeaderVariants").removeClass("Hidden")},$("#ArticleVariants").on("click",".RemoveDynRow",function(e){e.preventDefault(),$(this).parents("tr").remove()}),$(".RemoveVariant").on("click",function(){console.log($(this).data("rowid")),deleteDBItem($(this).data("route"),$(this).data("id"),$(this).data("rowid"))}),window.deleteDBItem=function(e,t,a){$.ajax({url:e,method:"POST",dataType:"JSON",data:{id:t},beforeSend:function(){},success:function(e){if(console.log(e),1!=e.success)return alert_error("Ups!","Ha ocurrido un error al eliminar la variante"),console.log(e),console.log(e.message),!1;$("#"+a).remove()},error:function(e){$("#Error").html(e.responseText),console.log(e),console.log(e.message)}})},$("#Single_Image").fileuploader({extensions:["jpg","jpeg","png","gif"],limit:1,addMore:!1,fileMaxSize:2,captions:{button:function(e){return"Seleccionar "+(e.limit,"Imágen")},feedback:function(e){return"Agregar imágenes..."},feedback2:function(e){return e.length+" "+(e.length>1?" imágenes seleccionadas":" imágen seleccionada")},drop:"Arrastre las imágenes aquí",paste:'<div class="fileuploader-pending-loader"><div class="left-half" style="animation-duration: ${ms}s"></div><div class="spinner" style="animation-duration: ${ms}s"></div><div class="right-half" style="animation-duration: ${ms}s"></div></div> Pasting a file, click here to cancel.',removeConfirmation:"Eliminar?",errors:{filesLimit:"Solo es posible subir ${limit} imágen.",filesType:"Solo se aceptan los formatos: ${extensions}.",fileSize:"La imágen pesa mucho! Elija una de ${fileMaxSize}MB como máximo.",fileName:"La imágen con ese nombre ya ha sido elegida",folderUpload:"No está permitido subir carpetas."},dialogs:{alert:function(e){function t(t){return e.apply(this,arguments)}return t.toString=function(){return e.toString()},t}(function(e){return alert(e)}),confirm:function(e,t){"confirm(text) ? callback() : null;"}}}}),$("#Multi_Images").fileuploader({extensions:["jpg","jpeg","png","gif","bmp"],changeInput:" ",theme:"thumbnails",enableApi:!0,addMore:!0,dragDrop:{container:null,onDragEnter:function(e,t,a,i,n){},onDragLeave:function(e,t,a,i,n){},onDrop:function(e,t,a,i,n){}},sorter:{selectorExclude:null,placeholder:null,scrollContainer:window,onSort:function(e,t,a,i,n){$("#FeaturedImageName").val(e[0].name)}},thumbnails:(a={onItemShow:function(e){e.html.find(".fileuploader-action-remove").before('<a class="fileuploader-action fileuploader-action-sort fas fa-sort" title="Sort"><i></i></a>')},box:'<div class="fileuploader-items"><ul class="fileuploader-items-list"><li class="fileuploader-thumbnails-input"><div class="fileuploader-thumbnails-input-inner">+</div></li></ul></div>',item:'<li class="fileuploader-item"><div class="fileuploader-item-inner"><div class="thumbnail-holder">${image}</div><div class="actions-holder"><a class="fileuploader-custom-action fileuploader-action-sort" title="Ordenar"><i class="fas fa-arrows-alt"></i></a> <a class="fileuploader-custom-action fileuploader-action-remove" title="Eliminar">X</a> <span class="fileuploader-action-popup"></span></div><div class="progress-holder">${progressBar}</div></div></li>',startImageRenderer:!0,canvasImage:!1,_selectors:{list:".fileuploader-items-list",item:".fileuploader-item",start:".fileuploader-action-start",retry:".fileuploader-action-retry",sorter:".fileuploader-action-sort",remove:".fileuploader-action-remove"}},i="onItemShow",n=function(e,t,a,i,n){var o=t.find(".fileuploader-thumbnails-input"),l=$.fileuploader.getInstance(n.get(0));o.insertAfter(e.html)[l.getOptions().limit&&l.getChoosedFiles().length>=l.getOptions().limit?"hide":"show"](),"image"==e.format&&e.html.find(".fileuploader-item-icon").hide()},i in a?Object.defineProperty(a,i,{value:n,enumerable:!0,configurable:!0,writable:!0}):a[i]=n,a),afterRender:function(e,t,a,i){var n=e.find(".fileuploader-thumbnails-input"),o=$.fileuploader.getInstance(i.get(0));n.on("click",function(){o.open()})},onRemove:function(e,t,a,i,n){var o=t.find(".fileuploader-thumbnails-input"),l=$.fileuploader.getInstance(n.get(0));l.getOptions().limit&&l.getChoosedFiles().length-1<l.getOptions().limit&&o.show()}}),$(".Display-Input-Modificable").click(function(){$(this).removeClass("display-input-disabled")}),$("body").on("click","[data-editable]",function(){var e=$(this),t=$("<input/>").val(e.text());e.replaceWith(t);t.one("blur",function(){var e=$("<p data-editable />").text(t.val());t.replaceWith(e)}).focus()})}});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,